{"version":3,"sources":["Components/Previewer/Previewer.tsx","Components/Container/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["marked","setOptions","breaks","highlight","code","Prism","languages","javascript","Previewer","items","id","className","renderHTML","Container","useState","content","setContent","value","onChange","e","target","console","log","textareaOnChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAQAA,IAAOC,WAAW,CAChBC,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,WAAY,iBAI7D,IAQeC,EARoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,qBAAKC,GAAG,UAAUC,UAAU,iBAA5B,SACGC,IAAWZ,IAAOS,O,MC0DVI,MAhEf,WACE,MAA8BC,mBAAS,w9BAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAyCA,OACE,sBAAKL,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACA,wBACA,2BAJJ,wBAQA,oCACE,0BACED,GAAG,SACHO,MAAOF,EACPG,SAAU,SAACC,GAAD,OAlBO,SAACA,GACxBH,EAAWG,EAAEC,OAAOH,OACpBI,QAAQC,IAAI,SAAUtB,IAAOe,IAgBNQ,CAAiBJ,MAEpC,cAAC,EAAD,CAAWV,MAAOM,W,MC3DXS,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCQSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.854b5656.chunk.js","sourcesContent":["import \"./Previewer.scss\";\r\nimport marked from \"marked\";\r\nimport renderHTML from \"react-render-html\";\r\nimport Prism from \"prismjs\";\r\n\r\ntype Props = {\r\n  items: string;\r\n};\r\nmarked.setOptions({\r\n  breaks: true,\r\n  highlight: function (code) {\r\n    return Prism.highlight(code, Prism.languages.javascript, \"javascript\");\r\n  },\r\n});\r\n\r\nconst Previewer: React.FC<Props> = ({ items }) => {\r\n  return (\r\n    <div id=\"preview\" className=\"previewer-wrap\">\r\n      {renderHTML(marked(items))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Previewer;\r\n","import { useState } from \"react\";\r\nimport Previewer from \"../Previewer/Previewer\";\r\nimport marked from \"marked\";\r\nimport \"./Container.scss\";\r\n\r\n// And if you want to get really crazy, even tables:\r\n\r\n//   Wild Header | Crazy Header | Another Header?\r\n//   ------------ | ------------- | -------------\r\n//   Your content can | be here, and it | can be here....\r\n//   And here. | Okay. | I think we get it.\r\n\r\nfunction Container() {\r\n  const [content, setContent] = useState(`# Getting Started \r\n  **React** is a JavaScript ~~framework~~ library for building user interfaces.\r\n  Learn what _React_ is all about on [our homepage ](https://reactjs.org/) or [in the tutorial](https://reactjs.org/tutorial/tutorial.html).\r\n\r\n  ![React Logo](https://uploads.toptal.io/blog/category/logo/291/react.png)\r\n  \r\n   **_console.log_** in code: \\`console.log(\"Helloooo\")\\`\r\n  \r\n  \\`\\`\\`\r\n  // this is React code:\r\n  \r\n  ReactDOM.render(\r\n    <h1>Hello, world!</h1>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  \\`\\`\\`\r\n\r\n  \r\n  > ## Tip! \r\n  This guide is designed for people who prefer learning concepts step by step.\r\n   If you prefer to learn by doing, check out our practical tutorial.\r\n    You might find this guide and the tutorial complementary to each other.\r\n\r\n  - INSTALLATION\r\n    - Getting Started:\r\n      - Create a New React App\r\n      - CDN Links\r\n  \r\n  - MAIN CONCEPTS\r\n  1. Hello World\r\n  1. Introducing JSX \r\n  1. Rendering Elements\r\n  1. etc...\r\n\r\n  \r\n  `);\r\n  const textareaOnChange = (e: any) => {\r\n    setContent(e.target.value);\r\n    console.log(\"text::\", marked(content));\r\n  };\r\n  return (\r\n    <div className=\"container-wrap\">\r\n      <div className=\"header\">\r\n        <div className=\"buttons\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        Markdown Previewer\r\n      </div>\r\n      <section>\r\n        <textarea\r\n          id=\"editor\"\r\n          value={content}\r\n          onChange={(e) => textareaOnChange(e)}\r\n        />\r\n        <Previewer items={content} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import Container from \"./Components/Container/Container\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}